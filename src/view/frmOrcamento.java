package view;

import dao.DaoCliente;
import dao.DaoDuplicata;
import dao.DaoItemPedido;
import dao.DaoPedidoOrcamento;
import dao.DaoProduto;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import javax.swing.text.NumberFormatter;
import model.BuscaCEP;
import model.VisualizarRpt;

/**
 *
 * @author Henrique
 */
public class frmOrcamento extends javax.swing.JInternalFrame {

    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    Date dataAtual = new Date(System.currentTimeMillis());
    NumberFormatter nfPreco;
    boolean incluir = false, editar = false, incluirItem = false, editarItem = false;
    ArrayList<DaoCliente> listaCli = new ArrayList<DaoCliente>();
    ArrayList<DaoPedidoOrcamento> listaPed = new ArrayList<>();
    ArrayList<DaoProduto> listaPro = new ArrayList<>();
    ArrayList<DaoItemPedido> listaItem = new ArrayList<>();
    MaskFormatter mfUf, mfCep, mfData;
    int pesquisa, posicaoTabItem, indicesTabItens = 0, selectedItem = 0, oldProId = 0;
    private static String TIPO_ORCAMENTO = "O";
    private static String TIPO_PEDIDO = "P";

    /**
     * Creates new form frmOrcamento
     */
    public frmOrcamento() {
        initComponents();
        try {
            inicializaCombos();

            mfUf = new MaskFormatter("UU");
            mfUf.setPlaceholderCharacter('_');
            mfUf.setValueContainsLiteralCharacters(false);
            mfUf.setValueClass(String.class);
            DefaultFormatterFactory ddfUf = new DefaultFormatterFactory(mfUf);
            txtUfEntrega.setFormatterFactory(ddfUf);

            mfCep = new MaskFormatter("#####-###");
            mfCep.setValueContainsLiteralCharacters(false);
            mfCep.setPlaceholderCharacter('_');
            mfCep.setValueClass(String.class);
            DefaultFormatterFactory ddfCep = new DefaultFormatterFactory(mfCep);
            txtCepEntrega.setFormatterFactory(ddfCep);

            DecimalFormat df = new DecimalFormat("R$ #,###,##0.00");
            nfPreco = new NumberFormatter(df);
            nfPreco.setValueClass(Double.class);
            DefaultFormatterFactory dffPreco = new DefaultFormatterFactory(nfPreco);
            txtTotal.setFormatterFactory(dffPreco);
            txtSubTotal.setFormatterFactory(dffPreco);
            txtPreco.setFormatterFactory(dffPreco);

            DecimalFormat dFormat = new DecimalFormat("#,###,###.00");
            NumberFormatter formatter = new NumberFormatter(dFormat);
            formatter.setFormat(dFormat);
            formatter.setAllowsInvalid(false);
            //txtSubTotal.setFormatterFactory(dffPreco);
            //txtTotal.setFormatterFactory(dffPreco);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelBase = new javax.swing.JPanel();
        painelTabela = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrcamento = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnVizualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnGerarPedido = new javax.swing.JButton();
        btnCancelarOrcamento = new javax.swing.JButton();
        cmbPesquisa = new javax.swing.JComboBox();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JToggleButton();
        btnImprimir = new javax.swing.JButton();
        painelPedido = new javax.swing.JPanel();
        painelDados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNumPed = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        txtDataVenda = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        tabBase = new javax.swing.JTabbedPane();
        painelItens = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblitens = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        cmbProduto = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        spnQtd = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JFormattedTextField();
        btnIncluirItem = new javax.swing.JToggleButton();
        btnAlterarItem = new javax.swing.JToggleButton();
        btnExcluirItem = new javax.swing.JToggleButton();
        btnGravarItem = new javax.swing.JToggleButton();
        btnCancelarItem = new javax.swing.JToggleButton();
        txtPreco = new javax.swing.JFormattedTextField();
        btnGravar = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JToggleButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JFormattedTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        painelCliente = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtEnderecoEntrega = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumEntrega = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCompleEntrega = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtBairroEntrega = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCidadeEntrega = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtUfEntrega = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        txtCepEntrega = new javax.swing.JFormattedTextField();
        cmbCliente = new javax.swing.JComboBox();
        txtCodCli = new javax.swing.JTextField();
        btnPesqCliente = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtNomeSCad = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtTelSCad = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtEmailSCad = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtContatoSCad = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.setPreferredSize(new java.awt.Dimension(77, 23));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        tblOrcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Num Or√ßamento", "Cliente", "Status", "Data", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrcamento.setAutoscrolls(false);
        tblOrcamento.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblOrcamento);

        btnEditar.setText("Editar");
        btnEditar.setPreferredSize(new java.awt.Dimension(77, 23));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnVizualizar.setText("Vizualizar");
        btnVizualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVizualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setPreferredSize(new java.awt.Dimension(77, 23));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnGerarPedido.setText("Gerar Pedido");
        btnGerarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarPedidoActionPerformed(evt);
            }
        });

        btnCancelarOrcamento.setText("Cancelar Or√ßamento");
        btnCancelarOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarOrcamentoActionPerformed(evt);
            }
        });

        cmbPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pesquisar Por...", "Num Pedido", "Cliente" }));
        cmbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPesquisaActionPerformed(evt);
            }
        });

        txtPesquisa.setEnabled(false);
        txtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaActionPerformed(evt);
            }
        });
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.setPreferredSize(new java.awt.Dimension(77, 23));
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelTabelaLayout = new javax.swing.GroupLayout(painelTabela);
        painelTabela.setLayout(painelTabelaLayout);
        painelTabelaLayout.setHorizontalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnVizualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelTabelaLayout.createSequentialGroup()
                        .addComponent(cmbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelTabelaLayout.createSequentialGroup()
                        .addComponent(btnCancelarOrcamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGerarPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar)
                .addContainerGap())
        );
        painelTabelaLayout.setVerticalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGerarPedido)
                    .addComponent(btnCancelarOrcamento)
                    .addComponent(btnVizualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelPedido.setPreferredSize(new java.awt.Dimension(1001, 451));

        painelDados.setBorder(javax.swing.BorderFactory.createTitledBorder("Pedido de Venda"));

        jLabel1.setText("ID");

        txtId.setEditable(false);

        jLabel2.setText("N√∫mero");

        txtNumPed.setEditable(false);

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane3.setViewportView(txtObs);

        jLabel18.setText("Obs.");

        jLabel3.setText("Data");

        javax.swing.GroupLayout painelDadosLayout = new javax.swing.GroupLayout(painelDados);
        painelDados.setLayout(painelDadosLayout);
        painelDadosLayout.setHorizontalGroup(
            painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtNumPed, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(txtId))
                .addGap(133, 133, 133)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)))
        );
        painelDadosLayout.setVerticalGroup(
            painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumPed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblitens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Produto", "Quantidade", "Valor Unt.", "Sub Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblitens);

        jLabel14.setText("Produto");

        cmbProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProdutoActionPerformed(evt);
            }
        });

        jLabel15.setText("Quantidade");

        spnQtd.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        spnQtd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQtdStateChanged(evt);
            }
        });

        jLabel16.setText("Pre√ßo");

        jLabel17.setText("Sub Total");

        txtSubTotal.setEditable(false);

        btnIncluirItem.setText("Incluir");
        btnIncluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirItemActionPerformed(evt);
            }
        });

        btnAlterarItem.setText("Alterar");
        btnAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItemActionPerformed(evt);
            }
        });

        btnExcluirItem.setText("Excluir");
        btnExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemActionPerformed(evt);
            }
        });

        btnGravarItem.setText("Gravar");
        btnGravarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarItemActionPerformed(evt);
            }
        });

        btnCancelarItem.setText("Cancelar");
        btnCancelarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarItemActionPerformed(evt);
            }
        });

        txtPreco.setEditable(false);
        txtPreco.setEnabled(false);

        javax.swing.GroupLayout painelItensLayout = new javax.swing.GroupLayout(painelItens);
        painelItens.setLayout(painelItensLayout);
        painelItensLayout.setHorizontalGroup(
            painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
            .addGroup(painelItensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelItensLayout.createSequentialGroup()
                        .addGroup(painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelItensLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(185, 185, 185)
                                .addComponent(jLabel15))
                            .addGroup(painelItensLayout.createSequentialGroup()
                                .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnQtd)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelItensLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel17))
                            .addGroup(painelItensLayout.createSequentialGroup()
                                .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(painelItensLayout.createSequentialGroup()
                        .addComponent(btnIncluirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(btnCancelarItem)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        painelItensLayout.setVerticalGroup(
            painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelItensLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluirItem)
                    .addComponent(btnAlterarItem)
                    .addComponent(btnExcluirItem)
                    .addComponent(btnGravarItem)
                    .addComponent(btnCancelarItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
        );

        tabBase.addTab("Itens", painelItens);

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setText("Total:");

        txtTotal.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jLabel5.setText("Codigo");

        jLabel6.setText("Nome");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Endere√ßo de Entrega"));

        jLabel7.setText("Endere√ßo");

        jLabel8.setText("N√∫mero");

        jLabel9.setText("Complemento");

        jLabel10.setText("Bairro");

        jLabel11.setText("Cidade");

        jLabel12.setText("UF");

        jLabel21.setText("CEP");

        txtCepEntrega.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCepEntregaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtEnderecoEntrega))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtNumEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCompleEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(txtCidadeEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBairroEntrega)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(txtUfEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(txtCepEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEnderecoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompleEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBairroEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCidadeEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUfEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCepEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        cmbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });

        txtCodCli.setEditable(false);

        btnPesqCliente.setText("...");

        javax.swing.GroupLayout painelClienteLayout = new javax.swing.GroupLayout(painelCliente);
        painelCliente.setLayout(painelClienteLayout);
        painelClienteLayout.setHorizontalGroup(
            painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelClienteLayout.createSequentialGroup()
                        .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtCodCli, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(painelClienteLayout.createSequentialGroup()
                                .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesqCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelClienteLayout.setVerticalGroup(
            painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteLayout.createSequentialGroup()
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesqCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cliente com cadastro", painelCliente);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel19.setText("Nome");

        jLabel20.setText("Telefone");

        jLabel22.setText("E-mail");

        jLabel23.setText("Contato");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeSCad, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtTelSCad, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txtEmailSCad, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(txtContatoSCad, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeSCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTelSCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmailSCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtContatoSCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cliente sem cadastro", jPanel1);

        javax.swing.GroupLayout painelPedidoLayout = new javax.swing.GroupLayout(painelPedido);
        painelPedido.setLayout(painelPedidoLayout);
        painelPedidoLayout.setHorizontalGroup(
            painelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelPedidoLayout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tabBase))
                    .addGroup(painelPedidoLayout.createSequentialGroup()
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(btnCancelar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelPedidoLayout.setVerticalGroup(
            painelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGravar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPedidoLayout.createSequentialGroup()
                        .addComponent(tabBase)
                        .addGap(13, 13, 13))
                    .addGroup(painelPedidoLayout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painelDados.getAccessibleContext().setAccessibleName("Or√ßamento");

        javax.swing.GroupLayout painelBaseLayout = new javax.swing.GroupLayout(painelBase);
        painelBase.setLayout(painelBaseLayout);
        painelBaseLayout.setHorizontalGroup(
            painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE))
        );
        painelBaseLayout.setVerticalGroup(
            painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inicializaCombos() {
        try {
            DaoCliente cliente = new DaoCliente();
            cliente.setNome_cli("");
            listaCli = new ArrayList<DaoCliente>();
            cmbCliente.removeAllItems();
            listaCli.addAll(cliente.pesquisar(cliente));
            for (DaoCliente daoCli : listaCli) {
                cmbCliente.addItem(daoCli.getNome_cli());
            }
            if (cmbCliente.getItemCount() > 0) {
                cmbCliente.setSelectedIndex(0);
            }

            DaoProduto produto = new DaoProduto();
            cmbProduto.removeAllItems();
            produto.setPro_nome("");
            listaPro.addAll(produto.pesquisar(produto));
            for (DaoProduto daoPro : listaPro) {
                cmbProduto.addItem(daoPro.getPro_nome());
            }
            if (cmbProduto.getItemCount() > 0) {
                cmbProduto.setSelectedIndex(0);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void vizualizaDados() {
        painelBase.removeAll();
        painelBase.repaint();
        painelBase.revalidate();

        painelBase.add(painelPedido);
        painelBase.repaint();
        painelBase.revalidate();
        limpaCampos(painelPedido);
    }

    private void inicializaCampos() {
        try {
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            int pedNum = dped.pegaUltimoNumPed(TIPO_ORCAMENTO) + 1;
            dped.setPed_num(pedNum);
            txtNumPed.setText(String.valueOf(pedNum));
            int ultimoId = dped.pegaUltimaID();
            txtId.setText(String.valueOf(ultimoId));
            txtDataVenda.setText(sdf.format(dataAtual));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregaCamposEditar() {
        try {
            vizualizaDados();
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            DaoCliente dcli = new DaoCliente();

            if (tblOrcamento.getRowCount() > 0) {

                int poslinha = tblOrcamento.getSelectedRow();
                dped.setPed_id((Integer) tblOrcamento.getValueAt(poslinha, 0));
                dped.retornaDadosPedido();
                if (poslinha >= 0) {
                    txtId.setText(String.valueOf(dped.getPed_id()));
                    txtNumPed.setText(String.valueOf(dped.getPed_num()));
                    txtCodCli.setText(String.valueOf(dped.getCli_id()));
                    cmbCliente.setSelectedItem(dped.getCli_nome());
                    txtEnderecoEntrega.setText(dped.getCli_endereco());
                    txtNumEntrega.setText(dped.getCli_numero());
                    txtCompleEntrega.setText(dped.getCli_comple());
                    txtBairroEntrega.setText(dped.getCli_bairro());
                    txtCidadeEntrega.setText(dped.getCli_cidade());
                    txtUfEntrega.setText(dped.getCli_uf());
                    txtNomeSCad.setText(dped.getPed_orcNome());
                    txtTelSCad.setText(dped.getPed_orcFone());
                    txtEmailSCad.setText(dped.getPed_orcEmail());
                    txtContatoSCad.setText(dped.getPed_orcContato());
                    DaoItemPedido ditem = new DaoItemPedido();
                    ArrayList<DaoItemPedido> ListaItens;
                    ListaItens = ditem.retornaItensPedido(Integer.parseInt(txtId.getText()));
                    atualizaTabelaItens(ListaItens);
                    cmbClienteActionPerformed(null);
                    cmbProdutoActionPerformed(null);
                }
            }
            btnGravar.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro de convers√£o:" + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpaCampos(JComponent container) {
        for (Component jcomp : container.getComponents()) {
            if (jcomp instanceof JTextField) {
                ((JTextField) jcomp).setText(null);
            }
            if (jcomp instanceof JFormattedTextField) {
                ((JFormattedTextField) jcomp).setText(null);
            }
        }
    }

    private void limpaTable(JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void atualizaTabelaItens(ArrayList<DaoItemPedido> daoItem) {
        limpaTable(tblitens);
        double total = 0;
        if (daoItem.isEmpty()) {
            txtTotal.setValue(total);
        } else {
            String linha[] = new String[]{"", "", "", "", ""};
            DefaultTableModel tbl = (DefaultTableModel) tblitens.getModel();
            try {
                int posicao = -1;
                for (DaoItemPedido itemPedido : daoItem) {
                    posicao++;
                    tbl.addRow(linha);
                    tbl.setValueAt(itemPedido.getPro_cod(), posicao, 0);
                    tbl.setValueAt(itemPedido.getPro_nome(), posicao, 1);
                    tbl.setValueAt(String.valueOf(itemPedido.getQuantidade()), posicao, 2);
                    tbl.setValueAt(nfPreco.valueToString(itemPedido.getPreco()), posicao, 3);
                    tbl.setValueAt(nfPreco.valueToString(itemPedido.getVal_total()), posicao, 4);
                    total += itemPedido.getVal_total();
                }
                txtTotal.setValue(total);
                indicesTabItens = tblitens.getRowCount();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void atualizaTabelaIntensGerar() {
        double total = 0;
        if (txtTotal.getText().isEmpty()) {
            total = 0;
        } else {
            for (int i = 0; i < tblitens.getRowCount(); i++) {
                StringBuilder sb = new StringBuilder(tblitens.getValueAt(i, 4).toString().replaceAll(",", "."));
                sb.delete(0, 3);
                total += Double.parseDouble(sb.toString());
            }
        }
        String linha[] = new String[]{"", "", "", "", ""};
        DefaultTableModel tbl = (DefaultTableModel) tblitens.getModel();
        if (editar) {
            posicaoTabItem = tblitens.getRowCount();
        }

        try {
            if (editarItem) {
                tbl.setValueAt(listaPro.get(cmbProduto.getSelectedIndex()).getPro_cod(), selectedItem, 0);
                tbl.setValueAt(cmbProduto.getSelectedItem(), selectedItem, 1);
                tbl.setValueAt(String.valueOf(spnQtd.getValue()), selectedItem, 2);
                tbl.setValueAt(txtPreco.getText(), selectedItem, 3);
                tbl.setValueAt(txtSubTotal.getText(), selectedItem, 4);
                StringBuilder sb = new StringBuilder(txtSubTotal.getText().replaceAll(",", "."));
                sb.delete(0, 3);
                //total += Double.parseDouble(sb.toString());
            } else {
                tbl.addRow(linha);
                tbl.setValueAt(listaPro.get(cmbProduto.getSelectedIndex()).getPro_cod(), posicaoTabItem, 0);
                tbl.setValueAt(cmbProduto.getSelectedItem(), posicaoTabItem, 1);
                tbl.setValueAt(String.valueOf(spnQtd.getValue()), posicaoTabItem, 2);
                tbl.setValueAt(txtPreco.getText(), posicaoTabItem, 3);
                tbl.setValueAt(txtSubTotal.getText(), posicaoTabItem, 4);
                StringBuilder sb = new StringBuilder(txtSubTotal.getText().replaceAll(",", "."));
                sb.delete(0, 3);
                total += Double.parseDouble(sb.toString());
                posicaoTabItem++;
            }

            DecimalFormat df = new DecimalFormat("R$ #,###,##0.00;-R$ #,###,##0.00");
            nfPreco = new NumberFormatter(df);
            DefaultFormatterFactory dffQt = new DefaultFormatterFactory(nfPreco);
            txtTotal.setFormatterFactory(dffQt);
            txtTotal.setValue(total);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void atualizaTabela(ArrayList<DaoPedidoOrcamento> pedidos) {
        limpaTable(tblOrcamento);

        if (pedidos.isEmpty()) {
            JOptionPane.showMessageDialog(null, "N√£o foram encontrados registros"
                    + " no banco de dados.",
                    "Aten√ß√£o", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String linha[] = new String[]{"", "", "", "", "", ""};
            DefaultTableModel tbl = (DefaultTableModel) tblOrcamento.getModel();
            try {
                int posicao = -1;
                for (DaoPedidoOrcamento pedido : pedidos) {
                    posicao++;
                    tbl.addRow(linha);
                    tbl.setValueAt(pedido.getPed_id(), posicao, 0);
                    tbl.setValueAt(pedido.getPed_orcNum(), posicao, 1);
                    tbl.setValueAt(pedido.getCli_nome(), posicao, 2);
                    tbl.setValueAt(pedido.getStp_nome(), posicao, 3);
                    tbl.setValueAt(sdf.format(pedido.getDt_venda()), posicao, 4);
                    tbl.setValueAt(nfPreco.valueToString(pedido.getPed_total()), posicao, 5);
                }

                //TODO verificar sobre isso em ORCAMENTO 
                tblOrcamento.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value,
                            boolean isSelected, boolean hasFocus, int row, int column) {
                        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                        Object ref = table.getValueAt(row, 3);
                        if (ref != null && ref.equals("CANCELADO")) {
                            setBackground(Color.red);
                            setForeground(Color.WHITE);
                        } else {
                            setBackground(Color.WHITE);
                            setForeground(new Color(51, 51, 51));
                        }
                        return this;
                    }

                });
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void loopTextFields(JComponent container) {
        for (Component jcomp : container.getComponents()) {
            if (jcomp instanceof JTextField) {
                ((JTextField) jcomp).setEditable(false);
            }
            if (jcomp instanceof JComboBox) {
                ((JComboBox) jcomp).setEditable(false);
            }
            if (jcomp instanceof JFormattedTextField) {
                ((JFormattedTextField) jcomp).setEditable(false);
            }
            if (jcomp instanceof JTextArea) {
                ((JTextArea) jcomp).setEditable(false);
            }

        }
    }

    private void habilidaCamposItens(JComponent container, boolean hab) {
        for (Component jcomp : container.getComponents()) {
            if (jcomp instanceof JTextField) {
                ((JTextField) jcomp).setEnabled(hab);
            }
            if (jcomp instanceof JComboBox) {
                ((JComboBox) jcomp).setEnabled(hab);
            }
            if (jcomp instanceof JFormattedTextField) {
                ((JFormattedTextField) jcomp).setEnabled(hab);
            }
            if (jcomp instanceof JSpinner) {
                ((JSpinner) jcomp).setEnabled(hab);
            }
        }
    }

    private boolean confereItem(String produto) {
        int linhas = tblitens.getRowCount();
        int coluna = 1;
        boolean existe = false;
        if (tblitens.getRowCount() < 0) {

        } else {
            for (int i = 0; i < linhas; i++) {
                String item = (String) tblitens.getValueAt(i, coluna);
                if (item.equals(produto)) {
                    existe = true;
                    break;
                } else {
                    existe = false;
                }
            }
        }

        return existe;
    }

    private void gravaItem() {
        try {
            DaoItemPedido ditem = new DaoItemPedido();
            ArrayList<DaoItemPedido> ListaItens;
            ListaItens = ditem.retornaItensPedido(Integer.parseInt(txtId.getText()));
            atualizaTabelaItens(ListaItens);
            //oldProId = 0;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void gravarItensBD() {
        try {
            DaoItemPedido ditem = new DaoItemPedido();
            StringBuilder sb;

            //indicesTabItens[1] = tblitens.getRowCount();
            //if (incluirItem) {
            ditem.setPed_id(Integer.parseInt(txtId.getText()));
            if (editarItem) {
                ditem.deleteItensPedido();
                indicesTabItens = 0;
            }
            for (int i = indicesTabItens; i < tblitens.getRowCount(); i++) {
                ditem.setPro_cod(tblitens.getValueAt(i, 0).toString());
                ditem.setPro_id(ditem.retornaProId(tblitens.getValueAt(i, 0).toString()));
                sb = new StringBuilder(String.valueOf(tblitens.getValueAt(i, 3)).replaceAll(",", "."));
                ditem.setPreco(Double.parseDouble(sb.toString()));
                ditem.setQuantidade(Integer.parseInt(tblitens.getValueAt(i, 2).toString()));
                sb = new StringBuilder(String.valueOf(tblitens.getValueAt(i, 4)).replaceAll(",", "."));
                sb.delete(0, 3);
                ditem.setVal_total(Double.parseDouble(sb.toString()));
                ditem.incluir();
            }
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            sb = new StringBuilder(txtTotal.getText().replaceAll(",", "."));
            sb.delete(0, 3);
            dped.setPed_id(Integer.parseInt(txtId.getText()));
            dped.setPed_total(Double.parseDouble(sb.toString()));
            dped.updateTotal();
            gravaItem();
            //} else {
                /*for (int i = 0; i < tblitens.getRowCount(); i++) {
             ditem.setPed_id(Integer.parseInt(txtId.getText()));
             ditem.setPro_cod(tblitens.getValueAt(i, 0).toString());
             ditem.setPro_id(ditem.retornaProId(tblitens.getValueAt(i, 0).toString()));
             sb = new StringBuilder(String.valueOf(tblitens.getValueAt(i, 3)).replaceAll(",", "."));
             sb.delete(0, 3);
             ditem.setPreco(Double.parseDouble(sb.toString()));
             ditem.setQuantidade(Integer.parseInt(tblitens.getValueAt(i, 2).toString()));
             sb = new StringBuilder(txtSubTotal.getText().replaceAll(",", "."));
             sb.delete(0, 3);
             ditem.setVal_total(Double.parseDouble(sb.toString()));
             DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
             sb = new StringBuilder(txtTotal.getText().replaceAll(",", "."));
             sb.delete(0, 3);
             dped.setPed_id(Integer.parseInt(txtId.getText()));
             dped.setPed_total(Double.parseDouble(sb.toString()));
             dped.updateTotal();
             cmbProduto.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
             try {
             ditem.alterarItem(oldProId);
             } catch (SQLException ex) {
             Logger.getLogger(frmPedidos.class.getName()).log(Level.SEVERE, null, ex);
             } catch (ClassNotFoundException ex) {
             Logger.getLogger(frmPedidos.class.getName()).log(Level.SEVERE, null, ex);
             }
             }
             });
             ditem.alterarItem(oldProId);
             }
             }*/
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        try {
            vizualizaDados();
            inicializaCampos();

            DaoItemPedido ditem = new DaoItemPedido();
            ArrayList<DaoItemPedido> ListaItens;
            ListaItens = ditem.retornaItensPedido(Integer.parseInt(txtId.getText()));
            atualizaTabelaItens(ListaItens);
            habilidaCamposItens(painelItens, false);
            cmbClienteActionPerformed(null);
            cmbProdutoActionPerformed(null);
            incluir = true;
            editar = false;
            posicaoTabItem = 0;
            indicesTabItens = 0;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            int poslinha = tblOrcamento.getSelectedRow();
            dped.setPed_id(Integer.parseInt((tblOrcamento.getValueAt(poslinha, 0)).toString()));
            String status = dped.retornaStatusPedido();
            if (status.equals("ENTREGUE") || status.equals("CANCELADO")) {
                JOptionPane.showMessageDialog(this, "Pedido ja finalizado",
                        "Erro", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    editar = true;
                    incluir = false;
                    vizualizaDados();
                    carregaCamposEditar();
                    btnGravar.setEnabled(true);
                    btnCancelarItemActionPerformed(null);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                            JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnVizualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVizualizarActionPerformed
        try {
            vizualizaDados();
            carregaCamposEditar();
            loopTextFields(painelDados);
            loopTextFields(painelCliente);
            btnGravar.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro de convers√£o:" + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnVizualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            DaoItemPedido ditem = new DaoItemPedido();
            int poslinha = tblOrcamento.getSelectedRow();
            if (poslinha > -1) {
                dped.setPed_id((Integer) tblOrcamento.getValueAt(poslinha, 0));
                boolean verificaDup = dped.verificaDuplicata();
                if (verificaDup) {
                    JOptionPane.showMessageDialog(this, "Existem Duplicatas geradas para esse pedido!\nExclua - as e tente novamente.",
                            "Aviso", JOptionPane.OK_OPTION);
                } else {
                    ditem.setPed_id((Integer) tblOrcamento.getValueAt(poslinha, 0));
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse pedido?",
                            "Aviso", JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        try {
                            ditem.excluir();
                            dped.excluir();
                            JOptionPane.showMessageDialog(null, "Excluido com sucesso!", "Info:",
                                    JOptionPane.INFORMATION_MESSAGE);
                            formInternalFrameOpened(null);

                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                        } catch (ClassNotFoundException ex) {
                            JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {

                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um pedido!", "Info:",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnGerarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarPedidoActionPerformed
        DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
        int poslinha = tblOrcamento.getSelectedRow();
        if (poslinha > -1) {
            try {
                //dped.atualizaStatus(1, (Integer) tblOrcamento.getValueAt(poslinha, 0));\
                dped.setPed_id((Integer) tblOrcamento.getValueAt(poslinha, 0));
                dped.retornaDadosPedido();
                if (dped.getStp_codigo() == 2) {
                    JOptionPane.showInternalMessageDialog(this, "Or√ßamento Cancelado!", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {

                    int cliId = dped.getCli_id();
                    if (cliId != -1) {
                        int pedNum = dped.pegaUltimoNumPed(TIPO_PEDIDO) + 1;
                        dped.setPed_num(pedNum);
                        dped.setPed_tipo(TIPO_PEDIDO);
                        dped.geraPedOrc();
                        formInternalFrameOpened(null);
                    } else {
                        HashMap<String, String> dadosCli = new HashMap<String, String>();
                        dadosCli.put("id", String.valueOf(dped.getPed_id()));
                        dadosCli.put("nome", dped.getPed_orcNome());
                        dadosCli.put("fone", dped.getPed_orcFone());
                        dadosCli.put("email", dped.getPed_orcEmail());
                        dadosCli.put("contato", dped.getPed_orcContato());
                        dlgGeraPedido dlg = new dlgGeraPedido(dadosCli);
                        dlg.addWindowListener(new WindowAdapter() {
                            
                            @Override
                            public void windowClosed(WindowEvent e) {
                                DaoPedidoOrcamento p = new DaoPedidoOrcamento();
                                ArrayList<DaoPedidoOrcamento> ListaPedidos;
                                try {
                                    ListaPedidos = p.retornaTodosOrcamentos();
                                    atualizaTabela(ListaPedidos);
                                } catch (Exception ex) {
                                    JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + ex.getMessage(), "Erro:",
                                            JOptionPane.ERROR_MESSAGE);
                                }
                            }

                        });
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados\n" + e.getMessage(), "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe\n" + e.getMessage(), "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro\n" + e.getMessage(), "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um registro!", "Info:",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnGerarPedidoActionPerformed

    private void btnCancelarOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarOrcamentoActionPerformed
        DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
        int poslinha = tblOrcamento.getSelectedRow();
        if (poslinha > -1) {
            try {
                dped.atualizaStatus(2, (Integer) tblOrcamento.getValueAt(poslinha, 0));
                formInternalFrameOpened(null);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um pedido!", "Info:",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelarOrcamentoActionPerformed

    private void cmbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPesquisaActionPerformed
        switch (cmbPesquisa.getSelectedIndex()) {
            case 1:
                txtPesquisa.setEnabled(true);
                btnPesquisar.setEnabled(true);
                pesquisa = 1;
                break;
            case 2:
                txtPesquisa.setEnabled(true);
                btnPesquisar.setEnabled(true);
                pesquisa = 2;
                break;
            default:
                txtPesquisa.setEnabled(false);
                btnPesquisar.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_cmbPesquisaActionPerformed

    private void txtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaActionPerformed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnPesquisarActionPerformed(null);
        }
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            ArrayList<DaoPedidoOrcamento> ListaPedidos = null;
            switch (pesquisa) {
                case 1:
                    dped.setPed_num(Integer.parseInt(txtPesquisa.getText()));
                    dped.setPed_tipo(TIPO_ORCAMENTO);
                    ListaPedidos = dped.pesquisarNumPed(dped);
                    break;
                case 2:
                    dped.setCli_nome(txtPesquisa.getText());
                    dped.setPed_tipo(TIPO_ORCAMENTO);
                    ListaPedidos = dped.pesquisarNomeCli(dped);
                    break;
            }
            atualizaTabela(ListaPedidos);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        try {
            Map parametros = new HashMap();
            String par1 = "", titulo = "", arquivo = "";
            arquivo = "rptOrcamento.jasper";
            titulo = "Or√ßamento de Venda";
            par1 = "pedId";
            parametros.put(par1, tblOrcamento.getValueAt(tblOrcamento.getSelectedRow(), 0));
            VisualizarRpt.geraRelatorio(arquivo, parametros, titulo);
        } catch (Exception ex) {
            Logger.getLogger(frmPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void txtCepEntregaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCepEntregaFocusLost
        try {
            BuscaCEP busca = new BuscaCEP();
            txtEnderecoEntrega.setText(busca.getEndereco(txtCepEntrega.getText()));
            txtBairroEntrega.setText(busca.getBairro(txtCepEntrega.getText()));
            txtCidadeEntrega.setText(busca.getCidade(txtCepEntrega.getText()));
            txtUfEntrega.setText(busca.getUF(txtCepEntrega.getText()));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro" + ex.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtCepEntregaFocusLost

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
        if (cmbCliente.getSelectedIndex() > -1) {
            txtCodCli.setText(listaCli.get(cmbCliente.getSelectedIndex()).getCod_cli());
            txtEnderecoEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getEndereco_cli());
            txtNumEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getNumero_cli());
            txtCompleEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getComple_cli());
            txtBairroEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getBairro_cli());
            txtCidadeEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getCidade_cli());
            txtUfEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getUf_cli());
            txtCepEntrega.setText(listaCli.get(cmbCliente.getSelectedIndex()).getCep_cli());
        }
    }//GEN-LAST:event_cmbClienteActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        try {
            DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
            dped.setPed_id(Integer.parseInt(txtId.getText()));
            dped.setPed_tipo(TIPO_ORCAMENTO);
            dped.setPed_orcNum(Integer.parseInt(txtNumPed.getText()));
            dped.setDt_venda(dataAtual);
            dped.setCli_id(listaCli.get(cmbCliente.getSelectedIndex()).getId_cli());
            dped.setCli_endereco(txtEnderecoEntrega.getText());
            dped.setCli_numero(txtNumEntrega.getText());
            dped.setCli_comple(txtCompleEntrega.getText());
            dped.setCli_bairro(txtBairroEntrega.getText());
            dped.setCli_cidade(txtCidadeEntrega.getText());
            dped.setCli_uf(txtUfEntrega.getText());
            dped.setCli_cep(txtCepEntrega.getText().replace("-", ""));
            dped.setPed_orcNome(txtNomeSCad.getText());
            dped.setPed_orcFone(txtTelSCad.getText());
            dped.setPed_orcEmail(txtEmailSCad.getText());
            dped.setPed_orcContato(txtContatoSCad.getText());

            StringBuilder sb = new StringBuilder(txtTotal.getText().replaceAll(",", "."));
            sb.delete(0, 3);
            dped.setPed_total(Double.parseDouble(sb.toString()));
            dped.setPed_obs(txtObs.getText());
            dped.setStp_codigo(0);
            dped.alterar();
            gravarItensBD();
            editarItem = false;
            incluirItem = false;
            formInternalFrameOpened(null);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            if (incluir) {
                DaoPedidoOrcamento dped = new DaoPedidoOrcamento();
                dped.excluirUltimoId(Integer.parseInt(txtId.getText()));
            }
            painelBase.removeAll();
            painelBase.repaint();
            painelBase.revalidate();

            painelBase.add(painelTabela);
            painelBase.repaint();
            painelBase.revalidate();
            posicaoTabItem = 0;
            indicesTabItens = 0;
            editarItem = false;
            incluirItem = false;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        painelBase.removeAll();
        painelBase.repaint();
        painelBase.revalidate();

        painelBase.add(painelTabela);
        painelBase.repaint();
        painelBase.revalidate();
        DaoPedidoOrcamento p = new DaoPedidoOrcamento();
        ArrayList<DaoPedidoOrcamento> ListaPedidos;
        try {
            ListaPedidos = p.retornaTodosOrcamentos();
            atualizaTabela(ListaPedidos);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnCancelarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarItemActionPerformed
        habilidaCamposItens(painelItens, false);
    }//GEN-LAST:event_btnCancelarItemActionPerformed

    private void btnGravarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarItemActionPerformed
        if (incluirItem) {
            if (confereItem(cmbProduto.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "O produto ja existe nesse pedido!", "Erro:",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                atualizaTabelaIntensGerar();
            }
        } else {
            atualizaTabelaIntensGerar();
        }
        btnCancelarItemActionPerformed(null);
    }//GEN-LAST:event_btnGravarItemActionPerformed

    private void btnExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemActionPerformed
        try {
            DaoItemPedido ditem = new DaoItemPedido();
            int poslinha = tblitens.getSelectedRow();
            cmbProduto.setSelectedItem(tblitens.getValueAt(poslinha, 1));
            ditem.setPed_id(Integer.parseInt((txtId.getText())));
            ditem.setPro_id(ditem.retornaProId(tblitens.getValueAt(tblitens.getSelectedRow(), 0).toString()));
            if (poslinha > -1) {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse item?",
                        "Aviso", JOptionPane.YES_NO_OPTION);

                if (resposta == JOptionPane.YES_OPTION) {
                    try {
                        ditem.excluirItem();
                        atualizaTabelaItens(listaItem);
                        gravaItem();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {

                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um produto!", "Info:",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirItemActionPerformed

    private void btnAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItemActionPerformed
        try {
            incluirItem = false;
            editarItem = true;
            int poslinha = tblitens.getSelectedRow();
            selectedItem = poslinha;
            cmbProduto.setSelectedItem(tblitens.getValueAt(poslinha, 1));
            oldProId = listaPro.get(cmbProduto.getSelectedIndex()).getPro_id(); //OLD PRO ID PARA O UPDATE DO ITEM PEDIDO FUNCIONAR
            String qtd = String.valueOf(tblitens.getValueAt(poslinha, 2));
            // int last = qtd.indexOf(".");
            spnQtd.setValue(Integer.parseInt(qtd));
            StringBuilder sb;
            sb = new StringBuilder(tblitens.getValueAt(poslinha, 3).toString().replaceAll(",", "."));
            sb.delete(0, 3);
            txtPreco.setText(sb.toString());
            sb = new StringBuilder(tblitens.getValueAt(poslinha, 4).toString().replaceAll(",", "."));
            sb.delete(0, 3);
            txtSubTotal.setText(sb.toString());
            habilidaCamposItens(painelItens, true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarItemActionPerformed

    private void btnIncluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirItemActionPerformed
        habilidaCamposItens(painelItens, true);
        incluirItem = true;
        editarItem = false;
    }//GEN-LAST:event_btnIncluirItemActionPerformed

    private void spnQtdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQtdStateChanged
        //        DecimalFormat df = new DecimalFormat("R$ #,###,##0.00;-R$ #,###,##0.00");
        //        nfPreco = new NumberFormatter(df);
        //        DefaultFormatterFactory dffQt = new DefaultFormatterFactory(nfPreco);
        //        txtSubTotal.setFormatterFactory(dffQt);
        txtSubTotal.setValue((Integer) spnQtd.getValue() * Double.parseDouble(txtPreco.getText()));
    }//GEN-LAST:event_spnQtdStateChanged

    private void cmbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProdutoActionPerformed
        if (cmbProduto.getSelectedIndex() > -1) {
            txtPreco.setText(String.valueOf(listaPro.get(cmbProduto.getSelectedIndex()).getPro_preco()));
            spnQtd.setValue(1);
            spnQtdStateChanged(null);
        }
    }//GEN-LAST:event_cmbProdutoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAlterarItem;
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnCancelarItem;
    private javax.swing.JButton btnCancelarOrcamento;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JToggleButton btnExcluirItem;
    private javax.swing.JButton btnGerarPedido;
    private javax.swing.JToggleButton btnGravar;
    private javax.swing.JToggleButton btnGravarItem;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JToggleButton btnIncluirItem;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesqCliente;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JButton btnVizualizar;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JComboBox cmbPesquisa;
    private javax.swing.JComboBox cmbProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel painelBase;
    private javax.swing.JPanel painelCliente;
    private javax.swing.JPanel painelDados;
    private javax.swing.JPanel painelItens;
    private javax.swing.JPanel painelPedido;
    private javax.swing.JPanel painelTabela;
    private javax.swing.JSpinner spnQtd;
    private javax.swing.JTabbedPane tabBase;
    private javax.swing.JTable tblOrcamento;
    private javax.swing.JTable tblitens;
    private javax.swing.JTextField txtBairroEntrega;
    private javax.swing.JFormattedTextField txtCepEntrega;
    private javax.swing.JTextField txtCidadeEntrega;
    private javax.swing.JTextField txtCodCli;
    private javax.swing.JTextField txtCompleEntrega;
    private javax.swing.JTextField txtContatoSCad;
    private javax.swing.JFormattedTextField txtDataVenda;
    private javax.swing.JTextField txtEmailSCad;
    private javax.swing.JTextField txtEnderecoEntrega;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomeSCad;
    private javax.swing.JTextField txtNumEntrega;
    private javax.swing.JTextField txtNumPed;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JFormattedTextField txtPreco;
    private javax.swing.JFormattedTextField txtSubTotal;
    private javax.swing.JTextField txtTelSCad;
    private javax.swing.JFormattedTextField txtTotal;
    private javax.swing.JFormattedTextField txtUfEntrega;
    // End of variables declaration//GEN-END:variables
}
